class ShoutsController < ApplicationController
	skip_before_action :verify_authenticity_token

	def index
		@shouts = Shout.all
	end

	def new
	end

	def dashboard

		if params.has_key?(:message) and params[:message].present?

			if params[:image].nil?
				image = nil
			else
				image = params[:image].read()
			end

			@shout = Shout.create(
				message: params[:message],
				image: image
			)
		else
			@shout = nil
		end

		@latest_shout_id = Integer(Rails.cache.fetch("latest_shout_id", raw: true, expires_in: 1.days){1})
		latest_shout_ids = ([0, @latest_shout_id - 5].max ... @latest_shout_id).to_a().reverse()
		latest_shout_keys = latest_shout_ids.map{|id| Shout.cache_key(id)}

		@latest_shouts = latest_shout_keys.map{|key|
			Rails.cache.fetch(key, raw: true){nil}
		}.compact()

		# these do not trigger the RCE
		# @latest_shouts = Rails.cache.fetch_multi(*latest_shout_keys, raw: true, expires_in: 1.days){|x|}

	end

private
	def shout_params
		params.require(:shout).permit(:title, :text)
	end
end
